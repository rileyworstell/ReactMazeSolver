{"version":3,"sources":["components/block/block.jsx","components/grid/grid.jsx","algorithms/BFS.js","algorithms/DFS.js","components/button/button.jsx","components/selected/selected.jsx","components/path/path.jsx","components/color/color.jsx","App.js","algorithms/initializeArr.js","reportWebVitals.js","index.js"],"names":["enterHandler","props","isClickedDown","clickHandler","r","L","gridLength","id","Math","floor","c","x","gridArr","startPointSelecter","changeBlock","pointSelecter","Block","colorScheme","onMouseEnter","onClick","className","Grid","i","push","map","index","isDown","s","reconstructPath","e","prev","arr","visitedList","c1","c2","b1","b2","path","undefined","length","reverse","leng","z","unshift","awaitUpdatePath","solve","R","C","dr","dc","parent","rr","cc","q","visited","Array","j","shift","x1","console","log","stack","pop","Button","clickDo","recreateGrid","sP","bfs","slowPathRun","dfs","text","Selected","setStart","Path","toString","Color","elector","changeColor","changeScheme","changeSize","changeGridSize","initialValues","num","Arr","App","updatePathMaze","time","Promise","resolve","reject","setState","setTimeout","state","gridClassName","bind","this","fetch","splice","point","notWalls","onDragEnd","onMouseDown","onMouseUp","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.433c4527.chunk.js","sourcesContent":["import React from 'react';\nimport './block.css';\n\nlet enterHandler = (props) => {\n    if (props.isClickedDown === 1) {\n        clickHandler(props);\n    }\n}\n\nlet clickHandler = (props) => {\n    var r;\n    var L = props.gridLength;\n    if (props.id < L) {\n        r = 0;\n    } else {\n    r = Math.floor(props.id / L);\n    }\n     var c = props.id % L;\n\n    var x = props.gridArr;\n    if (x[r][c] !== \"S\") {\n    if (props.startPointSelecter === 1) {\n        x[r][c] = \"S\"\n        props.changeBlock(x);\n        props.pointSelecter([r, c]);\n    } else {\n        // if the value is equal to no wall then make it a wall\n        if (props.gridArr[r][c] === \"0\") {\n            x[r][c] = \"1\"\n            props.changeBlock(x);\n        }\n        else {\n            x[r][c] = \"0\"\n            props.changeBlock(x);\n        }\n    }\n}\n\n};\n\nexport const Block = (props) => {\n    var r;\n    var L = props.gridLength;\n    if (props.id < L) {\n        r = 0;\n    } else {\n    r = Math.floor(props.id / L);\n    }\n     var c = props.id % L;\n\n    if (props.gridArr[r][c] === \"0\") {\n        if (props.colorScheme === 2) {\n            return(\n                <div id={props.id} onMouseEnter={() => enterHandler(props)} onClick={() => clickHandler(props) }  className={props.className}></div>\n            );\n        } else {\n            return(\n                <div id={props.id} onMouseEnter={() => enterHandler(props)} onClick={() => clickHandler(props) }  className={props.className}></div>\n            );\n        }\n\n    }\n    else if(props.gridArr[r][c] === \"S\" ||  props.gridArr[r][c] === \"E\"){\n        if (props.colorScheme === 2) {\n            return(\n                <div id={props.id} onMouseEnter={() => enterHandler(props)} onClick={() => clickHandler(props) }  className={`${props.className} blockColorOrange`}></div>\n            );\n        } else {\n            return(\n                <div id={props.id}  onClick={() => clickHandler(props) } className={`${props.className} blockColorBlue`}></div>\n            );\n        }\n    }\n    else if(props.gridArr[r][c] === \"V\"){\n        if (props.colorScheme === 2) {\n            return(\n                <div id={props.id}  onClick={() => clickHandler(props) }  className={`${props.className} blockColorOcean`}></div>\n            );\n        } else {\n        return(\n            <div id={props.id}  onClick={() => clickHandler(props) } className={`${props.className} blockColorYellow`}></div>\n        );\n        }\n    }\n    else if(props.gridArr[r][c] === \"Solved\"){\n        if (props.colorScheme === 2) {\n            return(\n                <div id={props.id}  onClick={() => clickHandler(props) }  className={`${props.className} blockColorPink`}></div>\n            );\n        } else {\n        return(\n            <div id={props.id}  onClick={() => clickHandler(props) } className={`${props.className} blockColorGreen`}></div>\n        );\n        }\n    }\n    else {\n        if (props.colorScheme === 2) {\n            return(\n                <div id={props.id} onMouseEnter={() => enterHandler(props)} onClick={() => clickHandler(props) }  className={`${props.className} blockColorSalmon`}></div>\n            );\n        } else {\n        return(\n            <div id={props.id} onMouseEnter={() => enterHandler(props)} onClick={() => clickHandler(props) } className={`${props.className} blockColorRed`}></div>\n        );\n        }\n    }\n}","import React from 'react';\nimport './grid.css';\nimport { Block } from '../block/block.jsx'\n\nexport const Grid = (props) => {\n    var arr = props.gridArr;\n    var x = [];\n    for (var i = 0; i < props.gridLength * props.gridLength; i++) {\n      x.push(i);\n    }\n    return(\n    <div className={props.className}>\n      {/* The below creates the main grid with Blocks */}\n      {x.map((x,index) => {\n        return <Block isDown={props.isDown} isClickedDown={props.isClickedDown} colorScheme={props.colorScheme} s={props.s} pointSelecter={props.pointSelecter} startPointSelecter={props.startPointSelecter} gridLength={props.gridLength} changeBlock={props.changeBlock} gridArr={props.gridArr} className=\"block\" key={index} id={index} />;\n      })}\n    </div>\n    );\n}\n","\nexport const bfs = (props, arr, sP) => {\n    var s;\n    if (sP !== null && sP !== undefined) {\n        s = sP\n        arr[s[0]][s[1]] = \"S\";\n    }\n    else {\n        arr[0][0] = \"S\"\n        s = [0, 0];\n    }\n    var prev;\n    var visitedList = [];\n    var R = props.gridLength;\n    var C = props.gridLength;\n    var dr = [-1, 1, 0, 0];\n    var dc = [0, 0, 1, -1];\n    // put an ending point\n    arr[props.gridLength-1][props.gridLength-1] = \"E\"\n\n    var e = [props.gridLength-1, props.gridLength-1];\n\n    props.changeBlock(arr);\n\n    prev = solve(s, prev, R, C, dr, dc, arr, props, visitedList)\n\n    return reconstructPath(s, e, prev, arr, props, visitedList)\n}\n\nexport const reconstructPath = (s, e, prev, arr, props, visitedList) => {\n    var c1;\n    var c2;\n    var b1;\n    var b2;\n    var path = [];\n    if (prev === undefined) {\n        return;\n    } else {\n    path.push([prev[0][0]])\n    for (var i = 0; i < prev.length; i++) {\n        c1 = path[path.length-1][0][0]\n        c2 = path[path.length-1][0][1]\n        b1 = prev[i][1][0][0]\n        b2 = prev[i][1][0][1]\n        if (c1 === b1){\n            if (c2 === b2 +1 || c2 === b2 - 1){\n                path.push(prev[i][1])\n            }\n        }\n        if (c2 === b2){\n            if (c1 === b1 + 1 || c1 === b1 - 1) {\n                path.push(prev[i][1])\n            }}\n\n    }\n    path.reverse()\n\n    var x = arr;\n    var leng = visitedList.length;\n    // push visited spots to beginning of path before calling awaitUpdatePath\n    for (var z = 0; z < visitedList.length; z++) {\n      path.unshift([visitedList[z]]);\n    }\n    props.awaitUpdatePath(x, path, s, e, leng );\n    }\n}\n\n\nexport const solve = (s, prev, R, C, dr, dc, arr, props, visitedList) => {\n\tvar rr = 0;\n\tvar cc = 0;\n\tvar parent;\n  var r = s[0];\n  var c = s[1];\n  var q = [];\n  prev = [];\n  q.push([r, c]);\n  var visited = [];\n  for (var i = 0; i < props.gridLength; i++) {\n    visited[i] = new Array(props.gridLength);\n  }\n  for (i = 0; i < props.gridLength; i++) {\n    for (var j = 0; j < props.gridLength; j++) {\n        visited[i][j] = 0;\n    }\n  }\n  visited[r][c] = 1;\n  visitedList.unshift([r, c]);\n//   props.updateVisited(r, c);\n\n  \n  while (q.length !== 0) {\n  \tr = q[0][0];\n    c = q[0][1];\n    parent = q.shift();\n    \n    for (var x1 = 0; x1 < 4; x1++) {\n    \trr = r + dr[x1];\n        cc = c + dc[x1];\n      \tif (rr < 0 || cc < 0) {\n          continue;\n      \t}\n        if (rr >= R || cc >= C) {\n          continue;\n    \t\t}\n    \t\tif (arr[rr][cc] === \"E\"){\n        \t\tprev.push([[rr, cc], [parent]]);\n            prev.shift();\n            prev.reverse();\n            console.log(prev);\n            return prev;\n         }\n         if (arr[rr][cc] === \"1\") {\n                 continue;\n         }\n\n         if (visited[rr][cc] !== 1) {\n         \tq.push([rr, cc]);\n          visited[rr][cc] = 1;\n          visitedList.unshift([r, c]);\n          prev.push([[rr, cc], [parent]]);\n         }\n  }\n  \n}\n}\n\n","\nexport const dfs = (props, arr, sP) => {\n    var s;\n    if (sP !== null && sP !== undefined) {\n        s = sP\n        arr[s[0]][s[1]] = \"S\";\n    }\n    else {\n        arr[0][0] = \"S\"\n        s = [0, 0];\n    }\n    var prev;\n    var visitedList = [];\n    var R = props.gridLength;\n    var C = props.gridLength;\n    var dr = [-1, 1, 0, 0];\n    var dc = [0, 0, 1, -1];\n    // put an ending point\n    arr[props.gridLength-1][props.gridLength-1] = \"E\"\n\n    var e = [props.gridLength-1, props.gridLength-1];\n\n    props.changeBlock(arr);\n\n    prev = solve(s, prev, R, C, dr, dc, arr, props, visitedList)\n\n    return reconstructPath(s, e, prev, arr, props, visitedList)\n}\n\nexport const reconstructPath = (s, e, prev, arr, props, visitedList) => {\n    var c1;\n    var c2;\n    var b1;\n    var b2;\n    var path = [];\n    if (prev === undefined) {\n        return;\n    } else {\n    path.push([prev[0][0]])\n    for (var i = 0; i < prev.length; i++) {\n        c1 = path[path.length-1][0][0]\n        c2 = path[path.length-1][0][1]\n        b1 = prev[i][1][0][0]\n        b2 = prev[i][1][0][1]\n        if (c1 === b1){\n            if (c2 === b2 +1 || c2 === b2 - 1){\n                path.push(prev[i][1])\n            }\n        }\n        if (c2 === b2){\n            if (c1 === b1 + 1 || c1 === b1 - 1) {\n                path.push(prev[i][1])\n            }}\n\n    }\n    path.reverse()\n\n    var x = arr;\n    var leng = visitedList.length;\n\n    // push visited spots to beginning of path before calling awaitUpdatePath\n    for (var z = 0; z < visitedList.length; z++) {\n      path.unshift([visitedList[z]]);\n    }\n    props.awaitUpdatePath(x, path, s, e, leng );\n    }\n}\n\n\nexport const solve = (s, prev, R, C, dr, dc, arr, props, visitedList) => {\n\tvar rr = 0;\n\tvar cc = 0;\n\tvar parent;\n  var r = s[0];\n  var c = s[1];\n  var stack = [];\n  prev = [];\n  stack.push([r, c]);\n  var visited = [];\n  for (var i = 0; i < props.gridLength; i++) {\n    visited[i] = new Array(props.gridLength);\n  }\n  for (i = 0; i < props.gridLength; i++) {\n    for (var j = 0; j < props.gridLength; j++) {\n        visited[i][j] = 0;\n    }\n  }\n  visited[r][c] = 1;\n  visitedList.unshift([r, c]);\n//   props.updateVisited(r, c);\n\n  \n  while (stack.length !== 0) {\n  \tr = stack[stack.length-1][0];\n    c = stack[stack.length-1][1];\n    parent = stack.pop();\n    for (var x1 = 0; x1 < 4; x1++) {\n    \trr = r + dr[x1];\n        cc = c + dc[x1];\n      \tif (rr < 0 || cc < 0) {\n          continue;\n      \t}\n        if (rr >= R || cc >= C) {\n          continue;\n    \t\t}\n    \t\tif (arr[rr][cc] === \"E\"){\n        \t\tprev.push([[rr, cc], [parent]]);\n            prev.shift();\n            prev.reverse();\n            console.log(prev);\n            return prev;\n         }\n         if (arr[rr][cc] === \"1\") {\n                 continue;\n         }\n\n         if (visited[rr][cc] !== 1) {\n         \tstack.push([rr, cc]);\n          visited[rr][cc] = 1;\n          visitedList.unshift([r, c]);\n          prev.push([[rr, cc], [parent]]);\n         }\n  }\n  \n}\n}\n\n","import React from 'react';\nimport './button.css';\nimport { bfs } from '../../algorithms/BFS.js'\nimport { dfs } from '../../algorithms/DFS.js'\n\nexport const Button = (props) => {\n    return(\n    <button onClick={() => {\n        if (props.clickDo === 'bfs') {\n            if (props.path !== null) {\n                props.recreateGrid(null, true);\n            }else {\n        bfs(props, props.gridArr, props.s, props.slowPathRun)\n            }\n        } else if (props.clickDo === 'dfs') {\n            if (props.path !== null) {\n                props.recreateGrid(null, true);\n            }else {\n        dfs(props, props.gridArr, props.s, props.slowPathRun)\n            }\n        } \n        else {\n            props.recreateGrid();\n        }\n    }} className={props.className}>{props.text}\n    </button>\n    );\n}","import React from 'react';\nimport './selected.css';\n\nlet setStart = (props) => {\n    console.log(props.startPointSelecter);\n    props.pointSelecter()\n}\n\nexport const Selected = (props) => {\n    return(\n    <button onClick={() => setStart(props)} className={props.className}>{props.text}\n    </button>\n    );\n}","import React from 'react';\nimport './path.css';\n\n\nexport const Path = (props) => {\n    if (props.path) {\n        var x = \"\";\n       for (var i = 0; i < props.path.length; i++) {\n           x = x + (\"[\" + props.path[i].toString() + \"]\");\n       }\n       return(\n        <div>Your Path: {x}</div>\n        );\n        \n    }else {\n    return(\n    <div></div>\n    );\n    }\n}","import React from 'react';\nimport './color.css';\n\nlet changeScheme = (props) => {\n    props.changeColor()\n}\n\nlet changeGridSize = (props) => {\n    props.changeSize()\n}\n\nexport const Color = (props) => {\n    if (props.elector === 1) {\n    return(\n    <button onClick={() => changeScheme(props)} className={'colorButton'}>{props.text}\n    </button>\n    );\n    }\n    else if (props.elector === 2) {\n        return(\n            <button onClick={() => changeGridSize(props)} className={'sizeButton'}>{props.text}\n            </button>\n            );\n    }\n}","import './App.css';\nimport React, { Component} from 'react';\nimport {Grid} from './components/grid/grid.jsx'\nimport {Button} from './components/button/button.jsx'\nimport {Selected} from './components/selected/selected.jsx'\nimport {Path} from './components/path/path.jsx'\nimport {Arr} from './algorithms/initializeArr'\nimport {Color} from './components/color/color.jsx'\n\nlet initialValues = Arr(10);\nvar arr = initialValues[0];\nvar num = initialValues[1];\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      gridArr: arr,\n      gridLength: num,\n      startPointSelecter: 0 ,\n      s: null,\n      path: null,\n      colorScheme: 1,\n      gridClassName: 'mainGrid',\n      isClickedDown: 0\n    };\n    this.changeBlock = this.changeBlock.bind(this);\n    this.recreateGrid = this.recreateGrid.bind(this);\n    this.pointSelecter = this.pointSelecter.bind(this);\n    this.recreateGrid = this.recreateGrid.bind(this);\n    this.updatePathMaze = this.updatePathMaze.bind(this);\n    this.awaitUpdatePath = this.awaitUpdatePath.bind(this);\n    this.changeColor = this.changeColor.bind(this);\n    this.changeSize = this.changeSize.bind(this);\n    this.isDown = this.isDown.bind(this);\n  }\n\n\nchangeBlock(x, path=null) {\n  if (path !== null) {\n    this.setState({gridArr: x,  path: path});\n  }\n  this.setState({gridArr: x});\n}\n\nupdatePathMaze = (x, i, leng) => {\n  var time = 30;\n  if (i > leng) {\n    time =100;\n  }\n  let promise = new Promise((resolve, reject) => {\n    this.setState({gridArr: x}, () => {\n      setTimeout(() => { \n      i++;\n      resolve(i);\n    }, time);\n    });\n  });\n    return promise;\n}\n\n\nasync awaitUpdatePath(x, path, s, e, leng) {\n  // console.log(path);\n  // i is the promise and when the promise is returned it is incremented (this is for UI purposes)\n  var i = 0;\n  while ( i < path.length) {\n    // the first part of path is all of the visited up until the variable length and then that is the path to solve\n    if ( i <= leng) {\n      x[path[i][0][0]][path[i][0][1]] = \"V\";\n    } else {\n      x[path[i][0][0]][path[i][0][1]] = \"Solved\";\n    }\n    const fetch = await this.updatePathMaze(x, i, leng);\n    i = fetch;\n  }\n\n  // resets starting and ending points\n  x[path[leng][0][0]][path[leng][0][1]] = \"Solved\"\n  x[s[0]][s[1]] = \"S\";\n  x[e[0]][e[1]] = \"E\";\n  // this splits that path to solve from the whole path\n  path.splice(0, leng);\n  this.setState({gridArr: x, path: path});\n \n}\n\npointSelecter(point) {\n    if (point !== [-1, -1]) {\n      this.setState({startPointSelecter: this.state.startPointSelecter + 1,\n                  s: point});\n    }else {\n     this.setState({startPointSelecter: this.state.startPointSelecter + 1});\n    }\n}\n\nchangeColor() {\n if (this.state.colorScheme !== 2) {\n   this.setState({colorScheme: 2});\n }\n else {\n  this.setState({colorScheme: 1});\n }\n}\n\nisDown() {\n  if (this.state.isClickedDown !== 1) {\n    this.setState({isClickedDown: 1});\n  }\n  else {\n   this.setState({isClickedDown: 0});\n  }\n }\n\nchangeSize() {\n  if (this.state.gridLength === 10) {  \n    this.setState({gridLength: 12, gridClassName: 'mainGrid12'});\n    this.recreateGrid(12);\n  }\n  else {\n   this.setState({gridLength: 10, gridClassName: 'mainGrid'});\n   this.recreateGrid(10);\n  }\n  \n }\n\n\nrecreateGrid(x, notWalls) {\n  var i;\n  var j;\n  var arr = [];\n  var num;\n  if (x === null || x === undefined) {\n    num = this.state.gridLength;\n  }\n  else {\n    num = x;\n  }\n  if (notWalls === true) {\n    arr = this.state.gridArr;\n    for (i = 0; i < num; i++) {\n      for (j = 0; j < num; j++) {\n        if (arr[i][j] !== \"1\") {\n          arr[i][j] = \"0\";\n        }\n          \n      }\n    }\n    arr[num-1][num-1] = \"E\";\n    this.setState({gridArr: arr,\n                  startPointSelecter: 0,\n                  path: null\n    }); \n  }\n\n  else {\n  for (i = 0; i < num; i++) {\n    arr[i] = new Array(num);\n  }\n  for (i = 0; i < num; i++) {\n    for (j = 0; j < num; j++) {\n        arr[i][j] = \"0\";\n    }\n  }\n  arr[num-1][num-1] = \"E\";\n  this.setState({gridArr: arr,\n                startPointSelecter: 0 ,\n                s: null,\n                path: null,\n  }); \n}\n}\n  render() {\n  return (\n    <div onDragEnd={() => this.isDown()} onMouseDown={() => this.isDown()} onMouseUp={() => this.isDown()} className=\"App\">\n     <div>This is a maze solver!\n       <br/> Select Blocks to make them walls (red) and optionally select starting point and make a blue block. \n       <br/> Yellow will show the algorithm working and Green is the path. \n       <br/> Then start the BFS. \n       <br/> If you do not select a start point, one will be assigned for you. </div>\n\n     <Selected startPointSelecter={this.state.startPointSelecter} \n          pointSelecter={this.pointSelecter}\n          className={\"selectedButton\"}\n          text={\"Set Starting Point\"}/>\n\n\n    <Button gridLength={this.state.gridLength} \n          clickDo={'recreateGrid'}\n          recreateGrid={this.recreateGrid}\n          path={this.state.path}\n          changeBlock={this.changeBlock} \n          gridArr={this.state.gridArr} \n          className={\"redButton\"} \n          text={\"Restart Grid\"}/>\n\n     <Button gridLength={this.state.gridLength} \n          clickDo={'bfs'}\n          gridLength={this.state.gridLength}\n          awaitUpdatePath={this.awaitUpdatePath}\n          path={this.state.path}\n          changeBlock={this.changeBlock} \n          recreateGrid={this.recreateGrid}\n          gridArr={this.state.gridArr} \n          className={\"button\"} \n          s={this.state.s}\n          text={\"Start BFS\"}/>\n\n<Button gridLength={this.state.gridLength} \n          clickDo={'dfs'}\n          gridLength={this.state.gridLength}\n          awaitUpdatePath={this.awaitUpdatePath}\n          path={this.state.path}\n          changeBlock={this.changeBlock} \n          recreateGrid={this.recreateGrid}\n          gridArr={this.state.gridArr} \n          className={\"button\"} \n          s={this.state.s}\n          text={\"Start DFS\"}/>\n\n          <Color elector={1} changeColor={this.changeColor} text={\"Switch Colors\"} />\n          <Color  elector={2} changeSize={this.changeSize} text={\"Switch Size\"} />\n     <div></div> \n\n     <Grid gridLength={this.state.gridLength} \n          isDown={this.isDown}\n          isClickedDown={this.state.isClickedDown}\n          colorScheme={this.state.colorScheme}\n          changeBlock={this.changeBlock} \n          gridArr={this.state.gridArr} \n          s={this.state.s}\n          startPointSelecter={this.state.startPointSelecter}\n          pointSelecter={this.pointSelecter}\n          className={this.state.gridClassName}/> \n          <br />\n          <br />\n          <Path path={this.state.path}/>\n    </div>\n    \n  );\n  }\n}\n\nexport default App;\n","\nexport const Arr = (num) => {\n    // Creates Array to be able to map over the blocks\n    var arr = [];\n    var num = num;\n    for (var i = 0; i < num; i++) {\n        arr[i] = new Array(num);\n    }\n    for (i = 0; i < num; i++) {\n        for (var j = 0; j < num; j++) {\n            arr[i][j] = \"0\";\n        }\n    }\n    arr[num-1][num-1] = \"E\";\n    return [arr, num];\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}