(this["webpackJsonpmaze-solver"]=this["webpackJsonpmaze-solver"]||[]).push([[0],[,,,,,,,,,,,,,,,,,function(t,e,r){},,function(t,e,r){},function(t,e,r){},function(t,e,r){},function(t,e,r){},function(t,e,r){},function(t,e,r){},function(t,e,r){},function(t,e,r){"use strict";r.r(e);var n=r(0),i=r(1),c=r.n(i),a=r(6),s=r.n(a),o=(r(17),r(3)),l=r(5),h=r.n(l),d=r(7),u=r(8),g=r(9),b=r(2),j=r(11),f=r(10),S=(r(19),r(20),r(21),function(t){var e,r=t.gridLength;e=t.id<r?0:Math.floor(t.id/r);var n=t.id%r,i=t.gridArr;"S"!==i[e][n]&&(1===t.startPointSelecter?(i[e][n]="S",t.changeBlock(i),t.pointSelecter([e,n])):"0"===t.gridArr[e][n]?(i[e][n]="1",t.changeBlock(i)):(i[e][n]="0",t.changeBlock(i)))}),m=function(t){var e,r=t.gridLength;e=t.id<r?0:Math.floor(t.id/r);var i=t.id%r;return"0"===t.gridArr[e][i]?(t.colorScheme,Object(n.jsx)("div",{id:t.id,onClick:function(){return S(t)},className:t.className})):"S"===t.gridArr[e][i]||"E"===t.gridArr[e][i]?2===t.colorScheme?Object(n.jsx)("div",{id:t.id,onClick:function(){return S(t)},className:"".concat(t.className," blockColorOrange")}):Object(n.jsx)("div",{id:t.id,onClick:function(){return S(t)},className:"".concat(t.className," blockColorBlue")}):"V"===t.gridArr[e][i]?2===t.colorScheme?Object(n.jsx)("div",{id:t.id,onClick:function(){return S(t)},className:"".concat(t.className," blockColorOcean")}):Object(n.jsx)("div",{id:t.id,onClick:function(){return S(t)},className:"".concat(t.className," blockColorYellow")}):"Solved"===t.gridArr[e][i]?2===t.colorScheme?Object(n.jsx)("div",{id:t.id,onClick:function(){return S(t)},className:"".concat(t.className," blockColorPink")}):Object(n.jsx)("div",{id:t.id,onClick:function(){return S(t)},className:"".concat(t.className," blockColorGreen")}):2===t.colorScheme?Object(n.jsx)("div",{id:t.id,onClick:function(){return S(t)},className:"".concat(t.className," blockColorSalmon")}):Object(n.jsx)("div",{id:t.id,onClick:function(){return S(t)},className:"".concat(t.className," blockColorRed")})},v=function(t){t.gridArr;for(var e=[],r=0;r<t.gridLength*t.gridLength;r++)e.push(r);return Object(n.jsx)("div",{className:t.className,children:e.map((function(e,r){return Object(n.jsx)(m,{colorScheme:t.colorScheme,s:t.s,pointSelecter:t.pointSelecter,startPointSelecter:t.startPointSelecter,gridLength:t.gridLength,changeBlock:t.changeBlock,gridArr:t.gridArr,className:"block",id:r},r)}))})},p=(r(22),function(t,e,r,n,i,c){var a,s,o,l,h=[];if(void 0!==r){h.push([r[0][0]]);for(var d=0;d<r.length;d++)a=h[h.length-1][0][0],s=h[h.length-1][0][1],o=r[d][1][0][0],l=r[d][1][0][1],a===o&&(s!==l+1&&s!==l-1||h.push(r[d][1])),s===l&&(a!==o+1&&a!==o-1||h.push(r[d][1]));h.reverse();for(var u=n,g=c.length,b=0;b<c.length;b++)h.unshift([c[b]]);i.awaitUpdatePath(u,h,t,e,g)}}),O=function(t,e,r,n,i,c,a,s,o){var l,h=0,d=0,u=t[0],g=t[1],b=[];e=[],b.push([u,g]);for(var j=[],f=0;f<s.gridLength;f++)j[f]=new Array(s.gridLength);for(f=0;f<s.gridLength;f++)for(var S=0;S<s.gridLength;S++)j[f][S]=0;for(j[u][g]=1,o.unshift([u,g]);0!==b.length;){u=b[0][0],g=b[0][1],l=b.shift();for(var m=0;m<4;m++)if(h=u+i[m],d=g+c[m],!(h<0||d<0)&&!(h>=r||d>=n)){if("E"===a[h][d])return e.push([[h,d],[l]]),e.shift(),e.reverse(),e;"1"!==a[h][d]&&1!==j[h][d]&&(b.push([h,d]),j[h][d]=1,o.unshift([u,g]),e.push([[h,d],[l]]))}}},k=function(t){return Object(n.jsx)("button",{onClick:function(){"bfs"===t.clickDo?null!==t.path?t.recreateGrid():function(t,e,r){var n,i;null!==r&&void 0!==r?e[(n=r)[0]][n[1]]="S":(e[0][0]="S",n=[0,0]);var c=[],a=t.gridLength,s=t.gridLength;e[t.gridLength-1][t.gridLength-1]="E";var o=[t.gridLength-1,t.gridLength-1];t.changeBlock(e),i=O(n,i,a,s,[-1,1,0,0],[0,0,1,-1],e,t,c),p(n,o,i,e,t,c)}(t,t.gridArr,t.s,t.slowPathRun):t.recreateGrid()},className:t.className,children:t.text})},x=(r(23),function(t){return Object(n.jsx)("button",{onClick:function(){return function(t){console.log(t.startPointSelecter),t.pointSelecter()}(t)},className:t.className,children:t.text})}),C=(r(24),function(t){if(t.path){for(var e="",r=0;r<t.path.length;r++)e=e+"["+t.path[r].toString()+"]";return Object(n.jsxs)("div",{children:["Your Path: ",e]})}return Object(n.jsx)("div",{})}),N=(r(25),function(t){return 1===t.elector?Object(n.jsx)("button",{onClick:function(){return function(t){t.changeColor()}(t)},className:"colorButton",children:t.text}):2===t.elector?Object(n.jsx)("button",{onClick:function(){return function(t){t.changeSize()}(t)},className:"sizeButton",children:t.text}):void 0}),L=function(t){for(var e=[],r=(t=t,0);r<t;r++)e[r]=new Array(t);for(r=0;r<t;r++)for(var n=0;n<t;n++)e[r][n]="0";return e[t-1][t-1]="E",[e,t]}(10),P=L[0],A=L[1],B=function(t){Object(j.a)(r,t);var e=Object(f.a)(r);function r(t){var n;return Object(u.a)(this,r),(n=e.call(this,t)).updatePathMaze=function(t,e,r){var i=30;return e>r&&(i=100),new Promise((function(r,c){n.setState({gridArr:t},(function(){setTimeout((function(){e++,r(e)}),i)}))}))},n.state={gridArr:P,gridLength:A,startPointSelecter:0,s:null,path:null,colorScheme:2,gridClassName:"mainGrid"},n.changeBlock=n.changeBlock.bind(Object(b.a)(n)),n.recreateGrid=n.recreateGrid.bind(Object(b.a)(n)),n.pointSelecter=n.pointSelecter.bind(Object(b.a)(n)),n.recreateGrid=n.recreateGrid.bind(Object(b.a)(n)),n.updatePathMaze=n.updatePathMaze.bind(Object(b.a)(n)),n.awaitUpdatePath=n.awaitUpdatePath.bind(Object(b.a)(n)),n.changeColor=n.changeColor.bind(Object(b.a)(n)),n.changeSize=n.changeSize.bind(Object(b.a)(n)),n}return Object(g.a)(r,[{key:"changeBlock",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null!==e&&this.setState({gridArr:t,path:e}),this.setState({gridArr:t})}},{key:"awaitUpdatePath",value:function(){var t=Object(d.a)(h.a.mark((function t(e,r,n,i,c){var a,s;return h.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:a=0;case 1:if(!(a<r.length)){t.next=9;break}return e[r[a][0][0]][r[a][0][1]]=a<=c?"V":"Solved",t.next=5,this.updatePathMaze(e,a,c);case 5:s=t.sent,a=s,t.next=1;break;case 9:e[r[c][0][0]][r[c][0][1]]="Solved",e[n[0]][n[1]]="S",e[i[0]][i[1]]="E",r.splice(0,c),this.setState({gridArr:e,path:r});case 14:case"end":return t.stop()}}),t,this)})));return function(e,r,n,i,c){return t.apply(this,arguments)}}()},{key:"pointSelecter",value:function(t){t!==[-1,-1]?this.setState({startPointSelecter:this.state.startPointSelecter+1,s:t}):this.setState({startPointSelecter:this.state.startPointSelecter+1})}},{key:"changeColor",value:function(){2!==this.state.colorScheme?this.setState({colorScheme:2}):this.setState({colorScheme:1})}},{key:"changeSize",value:function(){10===this.state.gridLength?(this.setState({gridLength:12,gridClassName:"mainGrid12"}),this.recreateGrid(12)):(this.setState({gridLength:10,gridClassName:"mainGrid"}),this.recreateGrid(10))}},{key:"recreateGrid",value:function(t){var e=[];if(null===t||void 0===t)var r=this.state.gridLength;else r=t;for(var n=0;n<r;n++)e[n]=new Array(r);for(n=0;n<r;n++)for(var i=0;i<r;i++)e[n][i]="0";e[r-1][r-1]="E",this.setState({gridArr:e,startPointSelecter:0,s:null,path:null})}},{key:"render",value:function(){var t;return Object(n.jsxs)("div",{className:"App",children:[Object(n.jsxs)("div",{children:["This is a maze solver!",Object(n.jsx)("br",{})," Select Blocks to make them walls (red) and optionally select starting point and make a blue block.",Object(n.jsx)("br",{})," Yellow will show the algorithm working and Green is the path.",Object(n.jsx)("br",{})," Then start the BFS.",Object(n.jsx)("br",{})," If you do not select a start point, one will be assigned for you. "]}),Object(n.jsx)(x,{startPointSelecter:this.state.startPointSelecter,pointSelecter:this.pointSelecter,className:"selectedButton",text:"Set Starting Point"}),Object(n.jsx)(k,{gridLength:this.state.gridLength,clickDo:"recreateGrid",recreateGrid:this.recreateGrid,path:this.state.path,changeBlock:this.changeBlock,gridArr:this.state.gridArr,className:"redButton",text:"Restart Grid"}),Object(n.jsx)(k,(t={gridLength:this.state.gridLength,clickDo:"bfs"},Object(o.a)(t,"gridLength",this.state.gridLength),Object(o.a)(t,"awaitUpdatePath",this.awaitUpdatePath),Object(o.a)(t,"path",this.state.path),Object(o.a)(t,"changeBlock",this.changeBlock),Object(o.a)(t,"recreateGrid",this.recreateGrid),Object(o.a)(t,"gridArr",this.state.gridArr),Object(o.a)(t,"className","button"),Object(o.a)(t,"s",this.state.s),Object(o.a)(t,"text","Start BFS"),t)),Object(n.jsx)(N,{elector:1,changeColor:this.changeColor,text:"Switch Colors"}),Object(n.jsx)(N,{elector:2,changeSize:this.changeSize,text:"Switch Size"}),Object(n.jsx)("div",{}),Object(n.jsx)(v,{gridLength:this.state.gridLength,colorScheme:this.state.colorScheme,changeBlock:this.changeBlock,gridArr:this.state.gridArr,s:this.state.s,startPointSelecter:this.state.startPointSelecter,pointSelecter:this.pointSelecter,className:this.state.gridClassName}),Object(n.jsx)("br",{}),Object(n.jsx)("br",{}),Object(n.jsx)(C,{path:this.state.path})]})}}]),r}(i.Component),w=function(t){t&&t instanceof Function&&r.e(3).then(r.bind(null,27)).then((function(e){var r=e.getCLS,n=e.getFID,i=e.getFCP,c=e.getLCP,a=e.getTTFB;r(t),n(t),i(t),c(t),a(t)}))};s.a.render(Object(n.jsx)(c.a.StrictMode,{children:Object(n.jsx)(B,{})}),document.getElementById("root")),w()}],[[26,1,2]]]);
//# sourceMappingURL=main.5d762ae5.chunk.js.map