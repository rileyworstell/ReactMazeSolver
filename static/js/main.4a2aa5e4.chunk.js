(this["webpackJsonpmaze-solver"]=this["webpackJsonpmaze-solver"]||[]).push([[0],[,,,,,,,,,,,,,,function(t,e,r){},function(t,e,r){},function(t,e,r){},function(t,e,r){},function(t,e,r){},function(t,e,r){},function(t,e,r){},function(t,e,r){"use strict";r.r(e);for(var n=r(0),i=r(1),c=r.n(i),a=r(4),s=r.n(a),o=(r(14),r(5)),l=r(6),h=r(2),d=r(8),u=r(7),g=(r(15),r(16),r(17),function(t){var e,r=t.gridLength;e=t.id<r?0:Math.floor(t.id/r);var n=t.id%r,i=t.gridArr;"S"!==i[e][n]&&(1===t.startPointSelecter?(i[e][n]="S",t.changeBlock(i),t.pointSelecter([e,n])):"0"===t.gridArr[e][n]?(i[e][n]="1",t.changeBlock(i)):(i[e][n]="0",t.changeBlock(i)))}),f=function(t){var e,r=t.gridLength;e=t.id<r?0:Math.floor(t.id/r);var i=t.id%r;return"0"===t.gridArr[e][i]?Object(n.jsx)("div",{id:t.id,onClick:function(){return g(t)},className:t.className}):"S"===t.gridArr[e][i]||"E"===t.gridArr[e][i]?Object(n.jsx)("div",{id:t.id,onClick:function(){return g(t)},className:"".concat(t.className," blockColorBlue")}):"Solved"===t.gridArr[e][i]?Object(n.jsx)("div",{id:t.id,onClick:function(){return g(t)},className:"".concat(t.className," blockColorGreen")}):Object(n.jsx)("div",{id:t.id,onClick:function(){return g(t)},className:"".concat(t.className," blockColorRed")})},j=function(t){t.gridArr;for(var e=[],r=0;r<t.gridLength*t.gridLength;r++)e.push(r);return Object(n.jsx)("div",{className:t.className,children:e.map((function(e,r){return Object(n.jsx)(f,{s:t.s,pointSelecter:t.pointSelecter,startPointSelecter:t.startPointSelecter,gridLength:t.gridLength,changeBlock:t.changeBlock,gridArr:t.gridArr,className:"block",id:r},r)}))})},b=(r(18),function(t,e,r,n,i){var c,a,s,o,l=[];if(void 0!=r){l.push([r[0][0]]);for(var h=0;h<r.length;h++)c=l[l.length-1][0][0],a=l[l.length-1][0][1],s=r[h][1][0][0],o=r[h][1][0][1],c===s&&(a!==o+1&&a!==o-1||l.push(r[h][1])),a===o&&(c!==s+1&&c!==s-1||l.push(r[h][1]));l.reverse();for(var d=n,u=0;u<l.length-1;u++)d[l[u][0][0]][l[u][0][1]]="Solved",i.changeBlock(d);d[t[0]][t[1]]="S",i.changeBlock(d,l)}}),S=function(t,e,r,n,i,c,a){var s,o=0,l=0,h=t[0],d=t[1],u=[];e=[],u.push([h,d]);for(var g=[],f=0;f<10;f++)g[f]=new Array(10);for(f=0;f<10;f++)for(var j=0;j<10;j++)g[f][j]=0;for(g[h][d]=1;0!==u.length;){h=u[0][0],d=u[0][1],s=u.shift();for(var b=0;b<4;b++)if(o=h+i[b],l=d+c[b],!(o<0||l<0)&&!(o>=r||l>=n)){if("E"===a[o][l])return e.push([[o,l],[s]]),e.shift(),e.reverse(),e;"1"!==a[o][l]&&1!==g[o][l]&&(u.push([o,l]),g[o][l]=1,e.push([[o,l],[s]]))}}},p=function(t){return Object(n.jsx)("button",{onClick:function(){1===t.clickDo?null!==t.path?t.recreateGrid():function(t,e,r){var n,i;null!==r?e[(n=r)[0]][n[1]]="S":(e[0][0]="S",n=[0,0]),e[9][9]="E",t.changeBlock(e),i=S(n,i,10,10,[-1,1,0,0],[0,0,1,-1],e),b(n,[9,9],i,e,t)}(t,t.gridArr,t.s,t.slowPathRun):t.recreateGrid()},className:t.className,children:t.text})},v=(r(19),function(t){return Object(n.jsx)("button",{onClick:function(){return function(t){console.log(t.startPointSelecter),t.pointSelecter()}(t)},className:t.className,children:t.text})}),k=(r(20),function(t){if(t.path){for(var e="",r=0;r<t.path.length;r++)e=e+"["+t.path[r].toString()+"]";return Object(n.jsxs)("div",{children:["Your Path: ",e]})}return Object(n.jsx)("div",{})}),m=[],O=0;O<10;O++)m[O]=new Array(10);for(O=0;O<10;O++)for(var x=0;x<10;x++)m[O][x]="0";m[9][9]="E";var A=function(t){Object(d.a)(r,t);var e=Object(u.a)(r);function r(t){var n;return Object(o.a)(this,r),(n=e.call(this,t)).state={gridArr:m,gridLength:10,startPointSelecter:0,s:null,path:null},n.changeBlock=n.changeBlock.bind(Object(h.a)(n)),n.recreateGrid=n.recreateGrid.bind(Object(h.a)(n)),n.pointSelecter=n.pointSelecter.bind(Object(h.a)(n)),n.recreateGrid=n.recreateGrid.bind(Object(h.a)(n)),n}return Object(l.a)(r,[{key:"changeBlock",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null!==e&&(console.log(e),this.setState({gridArr:t,path:e})),this.setState({gridArr:t})}},{key:"updatePathMaze",value:function(t,e){console.log("path :)"),console.log(e),this.setState={gridArr:t,path:e}}},{key:"pointSelecter",value:function(t){t!==[-1,-1]?this.setState({startPointSelecter:this.state.startPointSelecter+1,s:t}):this.setState({startPointSelecter:this.state.startPointSelecter+1})}},{key:"recreateGrid",value:function(){for(var t=[],e=10,r=0;r<e;r++)t[r]=new Array(e);for(r=0;r<e;r++)for(var n=0;n<e;n++)t[r][n]="0";t[9][9]="E",this.setState({gridArr:t,startPointSelecter:0,s:null,path:null})}},{key:"render",value:function(){return Object(n.jsxs)("div",{className:"App",children:[Object(n.jsxs)("div",{children:["This is a maze solver! ",Object(n.jsx)("br",{})," Select Blocks to make them walls (red) and optionally select starting point and make a blue block. ",Object(n.jsx)("br",{}),"Then start the BFS. ",Object(n.jsx)("br",{})," If you do not select a start point, one will be assigned for you. "]}),Object(n.jsx)(v,{startPointSelecter:this.state.startPointSelecter,pointSelecter:this.pointSelecter,className:"selectedButton",text:"Set Starting Point"}),Object(n.jsx)(p,{gridLength:this.state.gridLength,clickDo:2,recreateGrid:this.recreateGrid,path:this.state.path,changeBlock:this.changeBlock,gridArr:this.state.gridArr,className:"redButton",text:"Restart Grid"}),Object(n.jsx)(p,{gridLength:this.state.gridLength,clickDo:1,path:this.state.path,changeBlock:this.changeBlock,recreateGrid:this.recreateGrid,gridArr:this.state.gridArr,className:"button",s:this.state.s,text:"Start BFS"}),Object(n.jsx)("div",{}),Object(n.jsx)(j,{gridLength:this.state.gridLength,changeBlock:this.changeBlock,gridArr:this.state.gridArr,s:this.state.s,startPointSelecter:this.state.startPointSelecter,pointSelecter:this.pointSelecter,className:"mainGrid"}),Object(n.jsx)(k,{path:this.state.path})]})}}]),r}(i.Component),B=function(t){t&&t instanceof Function&&r.e(3).then(r.bind(null,22)).then((function(e){var r=e.getCLS,n=e.getFID,i=e.getFCP,c=e.getLCP,a=e.getTTFB;r(t),n(t),i(t),c(t),a(t)}))};s.a.render(Object(n.jsx)(c.a.StrictMode,{children:Object(n.jsx)(A,{})}),document.getElementById("root")),B()}],[[21,1,2]]]);
//# sourceMappingURL=main.4a2aa5e4.chunk.js.map